{"swagger": "2.0", "basePath": "/", "paths": {"/notifications/": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Notification"}}}}, "summary": "List all notifications for the current user", "operationId": "get_notification_list", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["notifications"]}, "post": {"responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/Notification"}}}, "summary": "Create a new notification for the current user", "operationId": "post_notification_list", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/NotificationCreate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["notifications"]}}, "/notifications/{id}": {"parameters": [{"in": "path", "description": "The notification identifier", "name": "id", "required": true, "type": "integer"}], "delete": {"responses": {"204": {"description": "Notification deleted"}}, "summary": "Delete a notification by ID", "operationId": "delete_notification_resource", "tags": ["notifications"]}, "put": {"responses": {"204": {"description": "Notification marked as read"}}, "summary": "Mark a notification as read", "operationId": "put_notification_resource", "tags": ["notifications"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Notification"}}}, "summary": "Get a notification by ID", "operationId": "get_notification_resource", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["notifications"]}}, "/reports/": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserReport"}}}}, "summary": "List all reports (Admin only)", "operationId": "get_report_list", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["reports"]}, "post": {"responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/UserReport"}}}, "summary": "Create a new report", "operationId": "post_report_list", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserReportCreate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["reports"]}}, "/reports/{id}": {"parameters": [{"in": "path", "description": "The report identifier", "name": "id", "required": true, "type": "integer"}], "delete": {"responses": {"204": {"description": "Report deleted"}}, "summary": "Delete a report by ID", "operationId": "delete_report_resource", "tags": ["reports"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/UserReport"}}}, "summary": "Get a report by ID", "operationId": "get_report_resource", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["reports"]}}, "/rewards/": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Reward"}}}}, "summary": "List all rewards for the current user", "operationId": "get_reward_list", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["rewards"]}, "post": {"responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/Reward"}}}, "summary": "Create a new reward for the current user", "operationId": "post_reward_list", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RewardCreate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["rewards"]}}, "/rewards/{id}": {"parameters": [{"in": "path", "description": "The reward identifier", "name": "id", "required": true, "type": "integer"}], "delete": {"responses": {"204": {"description": "Reward deleted"}}, "summary": "Delete a reward by ID", "operationId": "delete_reward_resource", "tags": ["rewards"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reward"}}}, "summary": "Get a reward by ID", "operationId": "get_reward_resource", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["rewards"]}}, "/stations/": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Station"}}}}, "summary": "List all stations", "operationId": "get_station_list", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "security": [{"apikey": []}], "tags": ["stations"]}, "post": {"responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/Station"}}}, "summary": "Create a new station", "operationId": "post_station_list", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Station"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["stations"]}}, "/stations/{id}": {"parameters": [{"in": "path", "description": "The station identifier", "name": "id", "required": true, "type": "integer"}], "delete": {"responses": {"204": {"description": "Station deleted"}}, "summary": "Delete a station by ID", "operationId": "delete_station_resource", "tags": ["stations"]}, "put": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Station"}}}, "summary": "Update a station by ID", "operationId": "put_station_resource", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Station"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["stations"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Station"}}}, "summary": "Get a station by ID", "operationId": "get_station_resource", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["stations"]}}, "/trains/": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Train"}}}}, "summary": "List all trains with optional filters", "operationId": "get_train_list", "parameters": [{"name": "departure_station_id", "in": "query", "type": "integer", "description": "Filter by departure station ID"}, {"name": "arrival_station_id", "in": "query", "type": "integer", "description": "Filter by arrival station ID"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["trains"]}}, "/trains/favourites": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Train"}}}}, "summary": "List all trains favorited by the user", "operationId": "get_favourite_trains", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["trains"]}}, "/trains/favourites/delete_all": {"delete": {"responses": {"200": {"description": "Success"}}, "summary": "Delete all favorite trains for the user", "operationId": "delete_delete_all_favourites", "tags": ["trains"]}}, "/trains/{train_number}": {"parameters": [{"in": "path", "description": "The train number", "name": "train_number", "required": true, "type": "integer"}], "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Train"}}}, "summary": "Get a specific train by train number with optional station filters", "operationId": "get_train_resource", "parameters": [{"name": "departure_station_id", "in": "query", "type": "integer", "description": "Filter by departure station ID"}, {"name": "arrival_station_id", "in": "query", "type": "integer", "description": "Filter by arrival station ID"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["trains"]}}, "/users/login": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Token"}}}, "summary": "Authenticate a user and return a token", "operationId": "post_user_login", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserLogin"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["users"]}}, "/users/register": {"post": {"responses": {"201": {"description": "Success", "schema": {"$ref": "#/definitions/User"}}}, "summary": "Register a new user", "operationId": "post_user_register", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserCreate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["users"]}}, "/users/{id}": {"parameters": [{"in": "path", "description": "The user identifier", "name": "id", "required": true, "type": "integer"}], "delete": {"responses": {"204": {"description": "User deleted"}}, "summary": "Delete a user by ID", "operationId": "delete_user_resource", "tags": ["users"]}, "put": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/User"}}}, "summary": "Update a user by ID", "operationId": "put_user_resource", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserCreate"}}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["users"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/User"}}}, "summary": "Get a user by ID", "operationId": "get_user_resource", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["users"]}}}, "info": {"title": "Train Tracking API", "version": "1.0", "description": "APIs for tracking trains and stations"}, "produces": ["application/json"], "consumes": ["application/json"], "tags": [{"name": "trains", "description": "Train related operations"}, {"name": "stations", "description": "Station related operations"}, {"name": "users", "description": "User related operations"}, {"name": "reports", "description": "User report related operations"}, {"name": "notifications", "description": "Notification related operations"}, {"name": "rewards", "description": "Reward related operations"}], "definitions": {"Train": {"properties": {"train_number": {"type": "integer"}, "train_type": {"type": "string"}, "departure_station": {"$ref": "#/definitions/Station"}, "arrival_station": {"$ref": "#/definitions/Station"}, "number_of_votes": {"type": "integer"}, "delay_time": {"type": "integer"}, "list_of_stations": {"type": "array", "items": {"$ref": "#/definitions/Station"}}, "number_of_stations": {"type": "integer"}, "is_favourite": {"type": "boolean"}, "notification_enabled": {"type": "boolean"}}, "type": "object"}, "Station": {"required": ["name_ar", "name_en"], "properties": {"id": {"type": "integer", "description": "Unique identifier of the station"}, "name_en": {"type": "string", "description": "Station name in English"}, "name_ar": {"type": "string", "description": "Station name in Arabic"}, "code": {"type": "string", "description": "Station code"}, "location_lat": {"type": "number", "description": "Latitude of the station"}, "location_long": {"type": "number", "description": "Longitude of the station"}}, "type": "object"}, "UserCreate": {"required": ["email", "password", "phone_number", "username"], "properties": {"username": {"type": "string", "description": "Username"}, "email": {"type": "string", "description": "Email address"}, "phone_number": {"type": "string", "description": "Phone number"}, "password": {"type": "string", "description": "Password", "minLength": 6}}, "type": "object"}, "User": {"required": ["email", "phone_number", "username"], "properties": {"id": {"type": "integer", "description": "Unique identifier of the user"}, "username": {"type": "string", "description": "Username"}, "email": {"type": "string", "description": "Email address"}, "phone_number": {"type": "string", "description": "Phone number"}, "is_active": {"type": "boolean", "description": "Active status"}, "date_joined": {"type": "string", "format": "date-time", "description": "Date joined"}, "last_login": {"type": "string", "format": "date-time", "description": "Last login time"}}, "type": "object"}, "UserLogin": {"required": ["password", "username"], "properties": {"username": {"type": "string", "description": "Username or email"}, "password": {"type": "string", "description": "Password"}}, "type": "object"}, "Token": {"properties": {"token": {"type": "string", "description": "Authentication token"}}, "type": "object"}, "UserReportCreate": {"required": ["report_type", "reported_time", "station_id", "train_number"], "properties": {"train_number": {"type": "integer", "description": "Train number"}, "station_id": {"type": "integer", "description": "Station ID"}, "report_type": {"type": "string", "description": "Type of report", "example": "arrival", "enum": ["arrival", "departure", "onboard", "offboard"]}, "reported_time": {"type": "string", "format": "date-time", "description": "Time of the report in ISO 8601 format"}}, "type": "object"}, "UserReport": {"properties": {"id": {"type": "integer", "description": "Unique identifier of the report"}, "user_id": {"type": "integer", "description": "ID of the user who submitted the report"}, "train_number": {"type": "integer", "description": "Train number"}, "station_id": {"type": "integer", "description": "Station ID"}, "report_type": {"type": "string", "description": "Type of report", "example": "arrival", "enum": ["arrival", "departure", "onboard", "offboard"]}, "reported_time": {"type": "string", "format": "date-time", "description": "Time of the report"}, "created_at": {"type": "string", "format": "date-time", "description": "Time the report was created"}, "is_valid": {"type": "boolean", "description": "Validity of the report"}}, "type": "object"}, "NotificationCreate": {"required": ["title"], "properties": {"train_number": {"type": "integer", "description": "Train number"}, "title": {"type": "string", "description": "Title of the notification"}, "description": {"type": "string", "description": "Description of the notification"}}, "type": "object"}, "Notification": {"properties": {"id": {"type": "integer", "description": "Unique identifier of the notification"}, "user_id": {"type": "integer", "description": "ID of the user"}, "train_number": {"type": "integer", "description": "Train number"}, "title": {"type": "string", "description": "Title of the notification"}, "description": {"type": "string", "description": "Description of the notification"}, "time": {"type": "string", "format": "date-time", "description": "Time the notification was created"}, "is_read": {"type": "boolean", "description": "Read status of the notification"}}, "type": "object"}, "RewardCreate": {"required": ["points"], "properties": {"points": {"type": "integer", "description": "Number of reward points"}, "description": {"type": "string", "description": "Description of the reward"}}, "type": "object"}, "Reward": {"properties": {"id": {"type": "integer", "description": "Unique identifier of the reward"}, "user_id": {"type": "integer", "description": "ID of the user"}, "points": {"type": "integer", "description": "Number of reward points"}, "date_awarded": {"type": "string", "format": "date-time", "description": "Date the reward was awarded"}, "description": {"type": "string", "description": "Description of the reward"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
